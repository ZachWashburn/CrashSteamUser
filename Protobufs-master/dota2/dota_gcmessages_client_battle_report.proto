import "steammessages.proto";
import "dota_shared_enums.proto";
import "dota_gcmessages_common.proto";
import "dota_gcmessages_webapi.proto";
import "gcsdk_gcmessages.proto";
import "base_gcmessages.proto";
import "econ_gcmessages.proto";
import "dota_gcmessages_client.proto";
import "valveextensions.proto";

option optimize_for = SPEED;
option cc_generic_services = false;

enum CMsgBattleReport_HighlightType {
	k_eGameWinrate = 0 [(schema_friendly_name) = "Game Winrate"];
	k_eLaneWinrate = 1 [(schema_friendly_name) = "Lane Winrate"];
	k_eMMRDelta = 2 [(schema_friendly_name) = "Ranked MMR Delta"];
	k_eNumHeroesPlayed = 3 [(schema_friendly_name) = "Number of Heroes Played"];
	k_eNumGamesPlayed = 4 [(schema_friendly_name) = "Number of Games Played"];
	k_eAveragePowerRunesTaken = 5 [(schema_friendly_name) = "Average Power Runes Taken"];
	k_eAverageBountyRunesTaken = 6 [(schema_friendly_name) = "Average Bounty Runes Taken"];
	k_eTotalKillEnemyT1First = 7 [(schema_friendly_name) = "Total Enemy T1 Destroyed First"];
	k_eTotalRoshanKills = 8 [(schema_friendly_name) = "Total Roshan Kills"];
	k_eTotalDewards = 9 [(schema_friendly_name) = "Total Dewards"];
	k_eTotalCampsStacked = 10 [(schema_friendly_name) = "Total Camps Stacked"];
	k_eMaxWinstreak = 11 [(schema_friendly_name) = "Max Win Streak"];
	k_eAverageDewards = 12 [(schema_friendly_name) = "Average Dewards"];
	k_eAverageKills = 13 [(schema_friendly_name) = "Average Kills"];
	k_eMaxKills = 14 [(schema_friendly_name) = "Max Kills"];
	k_eAverageAssists = 15 [(schema_friendly_name) = "Average Assists"];
	k_eMaxAssists = 16 [(schema_friendly_name) = "Max Assists"];
	k_eAverageDeaths = 17 [(schema_friendly_name) = "Average Deaths"];
	k_eMinDeaths = 18 [(schema_friendly_name) = "Min Deaths"];
	k_eAverageCampsStacked = 19 [(schema_friendly_name) = "Average Camps Stacked"];
	k_eTotalLastHits = 20 [(schema_friendly_name) = "Total Last Hits"];
	k_eAverageLastHits = 21 [(schema_friendly_name) = "Average Last Hits"];
	k_eTotalDenies = 22 [(schema_friendly_name) = "Total Denies"];
	k_eAverageDenies = 23 [(schema_friendly_name) = "Average Denies"];
	k_eTotalGamesWithRoshanAdvantage = 24 [(schema_friendly_name) = "Total Games With Roshan Advantage (Player team killed Roshan more times)"];
	k_ePercentGamesWithRoshanAdvantage = 25 [(schema_friendly_name) = "Pct Games With Roshan Advantage (Player team killed Roshan more times)"];
	k_eAverageStunDuration = 26 [(schema_friendly_name) = "Average Stun Duration"];
	k_eTotalStunDuration = 27 [(schema_friendly_name) = "Total Stun Duration"];
	k_eAverageTeleportsUsed = 28 [(schema_friendly_name) = "Average Teleports Used"];
	k_eTotalTeleportsUsed = 29 [(schema_friendly_name) = "Total Teleports Used"];
	k_eAverageHeroDamage = 30 [(schema_friendly_name) = "Average Hero Damage"];
	k_eTotalHeroDamage = 31 [(schema_friendly_name) = "Total Hero Damage"];
	k_eAverageHeroHealing = 32 [(schema_friendly_name) = "Average Hero Healing"];
	k_eTotalHeroHealing = 33 [(schema_friendly_name) = "Total Hero Healing"];
	k_eAverageTowerDamage = 34 [(schema_friendly_name) = "Average Tower Damage"];
	k_eTotalTowerDamage = 35 [(schema_friendly_name) = "Total Tower Damage"];
}

enum CMsgBattleReport_HighlightCategory {
	k_eHighlightGeneral = 0 [(schema_friendly_name) = "General"];
	k_eHighlightHero = 1 [(schema_friendly_name) = "Hero"];
	k_eHighlightRole = 2 [(schema_friendly_name) = "Role"];
}

enum CMsgBattleReport_Role {
	k_eUnknownRole = -1 [(schema_suppress_enumerator) = true];
	k_eSafelane = 0 [(schema_friendly_name) = "Safe Lane"];
	k_eMidlane = 1 [(schema_friendly_name) = "Mid Lane"];
	k_eOfflane = 2 [(schema_friendly_name) = "Off Lane"];
	k_eSoftSupport = 3 [(schema_friendly_name) = "Soft Support"];
	k_eHardSupport = 4 [(schema_friendly_name) = "Hard Support"];
}

enum CMsgBattleReport_CompareContext {
	k_eAbsoluteValue = 0 [(schema_friendly_name) = "Overall Value"];
	k_ePlayersOfSimilarRank = 1 [(schema_friendly_name) = "Vs Rank Population"];
	k_eAllPlayers = 2 [(schema_friendly_name) = "Vs All Players"];
	k_ePlayersPersonalHistory = 3 [(schema_friendly_name) = "Vs Personal History"];
}

enum CMsgBattleReport_HighlightTier {
	k_eHighlightTierNone = 0 [(schema_suppress_enumerator) = true];
	k_eHighlightTier1 = 1 [(schema_friendly_name) = "Tier 1"];
	k_eHighlightTier2 = 2 [(schema_friendly_name) = "Tier 2"];
	k_eHighlightTier3 = 3 [(schema_friendly_name) = "Tier 3"];
	k_eHighlightTierCustom = 4 [(schema_friendly_name) = "Custom"];
}

enum CMsgBattleReport_HighlightRarity {
	k_eHighlightCommon = 0 [(schema_friendly_name) = "Common"];
	k_eHighlightUncommon = 1 [(schema_friendly_name) = "Uncommon"];
	k_eHighlightRare = 2 [(schema_friendly_name) = "Rare"];
}

message CMsgClientToGCGetBattleReport {
	optional uint32 account_id = 1;
	optional uint32 timestamp = 2;
	optional uint32 duration = 3;
}

message CMsgBattleReport {
	message HighlightGeneral {
		optional int32 win_loss_window = 1;
		optional float win_percent = 2;
		optional int32 mmr_delta = 3;
		optional float highlight_score = 4;
	}

	message Highlight {
		required uint32 highlight_id = 1;
		optional .CMsgBattleReport_HighlightTier tier = 2 [default = k_eHighlightTierNone];
		optional .CMsgBattleReport_HighlightRarity rarity = 3 [default = k_eHighlightCommon];
		optional float score = 4;
		optional float confidence = 5;
		optional uint32 hero_id = 6;
		optional .CMsgBattleReport_Role role = 7 [default = k_eUnknownRole];
	}

	message Game {
		optional uint32 hero_id = 1;
		optional uint32 kills = 2;
		optional uint32 deaths = 3;
		optional uint32 assists = 4;
		optional int32 rank_change = 5;
		optional uint32 last_hits = 6;
		optional uint32 denies = 21;
		optional uint32 gpm = 7;
		optional uint32 xpm = 8;
		optional .CMsgBattleReport_Role role = 9 [default = k_eUnknownRole];
		optional .CMsgBattleReport.EOutcome outcome = 10 [default = k_eWin];
		optional .CMsgBattleReport.ELaneOutcome lane_outcome = 11 [default = k_eUnknownLaneOutcome];
		optional bool ranked = 12;
		optional uint64 match_id = 13;
		optional uint32 lane_selection_flags = 14;
		optional uint32 predicted_position = 15;
		optional uint32 seconds_dead = 16;
		optional uint32 winning_team = 17;
		optional uint32 player_slot = 28;
		optional bool party_game = 19;
		optional uint32 start_time = 20;
		optional uint32 bounty_runes = 22;
		optional uint32 water_runes = 23;
		optional uint32 power_runes = 24;
		optional uint32 time_enemy_t1_tower_destroyed = 25;
		optional uint32 time_friendly_t1_tower_destroyed = 26;
		optional uint32 enemy_roshan_kills = 27;
		optional uint32 teleports_used = 29;
		optional uint32 dewards = 30;
		optional uint32 camps_stacked = 31;
		optional uint32 support_gold = 32;
		optional uint32 hero_damage = 33;
		optional uint32 hero_healing = 34;
		optional uint32 tower_damage = 35;
		optional uint32 successful_smokes = 36;
		optional uint32 stun_duration = 37;
		optional uint32 duration = 38;
		optional uint32 friendly_roshan_kills = 39;
	}

	enum EOutcome {
		k_eWin = 0;
		k_eLoss = 1;
	}

	enum ELaneOutcome {
		k_eUnknownLaneOutcome = -1;
		k_eWonLane = 0;
		k_eLostLane = 1;
		k_eEvenLane = 2;
	}

	repeated .CMsgBattleReport.Game games = 1;
}

message CMsgBattleReportInfo {
	optional uint32 timestamp = 1;
	optional uint32 duration = 2;
	optional bool acknowledged = 3;
}

message CMsgBattleReportInfoList {
	repeated .CMsgBattleReportInfo battle_report_info = 1;
}

message CMsgBattleReportHighlights {
	repeated .CMsgBattleReport.Highlight highlights = 1;
}

message CMsgBattleReportAggregatedHeroStats {
	message Hero {
		optional uint32 hero_id = 1;
		optional .CMsgGlobalHeroAverages averages = 2;
	}

	repeated .CMsgBattleReportAggregatedHeroStats.Hero hero = 1;
}

message CMsgBattleReportAggregatedRoleStats {
	optional .CMsgBattleReport_Role role = 1 [default = k_eUnknownRole];
}

message CMsgBattleReportAggregatedGeneralStats {
}

message CMsgClientToGCGetBattleReportResponse {
	enum EResponse {
		k_eInternalError = 0;
		k_eSuccess = 1;
		k_eTooBusy = 2;
		k_eDisabled = 3;
		k_ePermissionDenied = 4;
	}

	optional .CMsgBattleReport report = 1;
	optional .CMsgClientToGCGetBattleReportResponse.EResponse response = 2 [default = k_eInternalError];
}

message CMsgClientToGCGetBattleReportAggregatedHeroStats {
	optional uint32 account_id = 1;
	repeated uint32 hero_ids = 2;
}

message CMsgClientToGCGetBattleReportAggregatedHeroStatsResponse {
	enum EResponse {
		k_eInternalError = 0;
		k_eSuccess = 1;
		k_eTooBusy = 2;
		k_eDisabled = 3;
		k_ePermissionDenied = 4;
	}

	optional .CMsgBattleReportAggregatedHeroStats stats = 1;
	optional .CMsgClientToGCGetBattleReportAggregatedHeroStatsResponse.EResponse response = 2 [default = k_eInternalError];
}

message CMsgClientToGCGetBattleReportInfo {
	optional uint32 account_id = 1;
}

message CMsgClientToGCGetBattleReportInfoResponse {
	enum EResponse {
		k_eInternalError = 0;
		k_eSuccess = 1;
		k_eTooBusy = 2;
		k_eDisabled = 3;
		k_ePermissionDenied = 4;
	}

	optional .CMsgBattleReportInfoList battle_report_info_list = 1;
	optional .CMsgClientToGCGetBattleReportInfoResponse.EResponse response = 2 [default = k_eInternalError];
}
